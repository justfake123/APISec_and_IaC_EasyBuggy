apiVersion: apps/v1
kind: Deployment
metadata:
  name: crapi-community
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crapi-community
  template:
    metadata:
      labels:
        app: crapi-community
    spec:
      initContainers:
        - name: wait-for-postgres
          image: groundnuty/k8s-wait-for:v1.3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 3
          
          securityContext:
            runAsUser: 10000
            runAsGroup: 3000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          
          resources:
            requests:
              cpu: "250m"       # Minimum CPU required (0.25 vCPU)
              memory: "256Mi"   # Minimum memory required
            limits:
              cpu: "500m"       
              memory: "512Mi"   

          imagePullPolicy: Always
          args:
            - "service"
            - "postgresdb"
        - name: wait-for-mongo
          image: groundnuty/k8s-wait-for:v1.3
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 3
          
          securityContext:
            runAsUser: 10000
            runAsGroup: 3000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL

            resources:
              requests:
                cpu: "250m"       # Minimum CPU required (0.25 vCPU)
                memory: "256Mi"   # Minimum memory required
              limits:
                cpu: "500m"       
                memory: "512Mi"  

          args:
            - "service"
            - "mongodb"
        - name: wait-for-java
          image: groundnuty/k8s-wait-for:v1.3
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 3
          
          securityContext:
            runAsUser: 10000
            runAsGroup: 3000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          
          resources:
            requests:
              cpu: "250m"       # Minimum CPU required (0.25 vCPU)
              memory: "256Mi"   # Minimum memory required
            limits:
              cpu: "500m"       
              memory: "512Mi"   

          args:
            - "service"
            - "crapi-identity"
      containers:
      - name: crapi-community
        image: crapi/crapi-community:v1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 2
          failureThreshold: 3
        
        securityContext:
          runAsUser: 10000
          runAsGroup: 3000
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        
        resources:
          requests:
            cpu: "250m"       # Minimum CPU required (0.25 vCPU)
            memory: "256Mi"   # Minimum memory required
          limits:
            cpu: "500m"       
            memory: "512Mi"   
        ports:
        - containerPort: 8087
        envFrom:
            - configMapRef:
                name: crapi-community-configmap
        resources:
          limits:
            cpu: "500m"
          requests:
            cpu: 256m
